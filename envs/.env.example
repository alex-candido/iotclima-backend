# --- Django Core Settings ---
DEBUG=True
# CRITICAL: Replace with a very strong, random 50+ character string.
# DO NOT commit actual secrets to version control.
SECRET_KEY=your_super_secret_django_key_here_for_production_and_dev

# Allowed hosts for Django. Use a comma-separated list or JSON array.
# For production, replace '*' with your actual domain(s).
ALLOWED_HOSTS=["*"]

# --- Environment Settings ---
ENVIRONMENT=development # Options: development, production, test

# --- Database Settings ---
# Example for SQLite (default for development/test if not set in .env)
# For production, use a PostgreSQL or MySQL URL like:
# DATABASE_URL=postgres://user:password@host:port/dbname
DATABASE_URL=postgis://iotclima:iotclima@0.0.0.0:5438/iotclima

# --- JWT Settings ---
# CRITICAL: Replace with a very strong, random secret key for JWT signing.
# Should be different from SECRET_KEY unless you have a specific reason to link them.
JWT_SECRET_KEY=your_super_secret_jwt_key_here_for_production_and_dev
JWT_ACCESS_TOKEN_LIFETIME_MINUTES=5
JWT_REFRESH_TOKEN_LIFETIME_DAYS=1
JWT_ALGORITHM=HS256

# --- CORS Settings ---
CORS_ALLOW_ALL_ORIGINS=False # Set to True to allow all origins (less secure for prod)
# Comma-separated list for Pydantic to parse
CORS_ALLOWED_ORIGINS=["http://localhost:8000","http://127.0.0.1:8000","http://localhost:3000"]

# --- Email Settings ---
EMAIL_BACKEND="django.core.mail.backends.smtp.EmailBackend"
EMAIL_HOST="smtp-relay.sendinblue.com"
EMAIL_PORT=587
EMAIL_USE_TLS=True
EMAIL_HOST_USER="your_sendinblue_username" # Or your email for SMTP
EMAIL_HOST_PASSWORD="your_sendinblue_password" # Or your email password/app password
DEFAULT_FROM_EMAIL="alex.candido.tec@gmail.com"

# --- Frontend URL ---
FRONTEND_URL="http://localhost:3000"

# --- Redirect URLs (Paths relative to FRONTEND_URL in ConfigService) ---
# These are paths that will be prepended with FRONTEND_URL in settings.py
LOGIN_URL=/auth/sign-in
LOGIN_REDIRECT_URL=/app
LOGOUT_REDIRECT_URL=/ # Or /auth/sign-in if you prefer
RESET_PASSWORD_REDIRECT_URL=/auth/reset-password

# --- Allauth Settings ---
ACCOUNT_SIGNUP_FIELDS=["email*","username*","password1*","password2*"]
ACCOUNT_LOGIN_ON_EMAIL_CONFIRMATION=False
ACCOUNT_PASSWORD_RESET_BY_CODE_ENABLED=False
ACCOUNT_CONFIRM_EMAIL_ON_GET=True
ACCOUNT_EMAIL_CONFIRMATION_EXPIRE_DAYS=3
ACCOUNT_EMAIL_VERIFICATION=mandatory # Options: mandatory, optional, none
ACCOUNT_AUTHENTICATED_LOGIN_REDIRECTS=True
ACCOUNT_EMAIL_CONFIRMATION_ANONYMOUS_REDIRECT_URL=/auth/sign-in
ACCOUNT_EMAIL_CONFIRMATION_AUTHENTICATED_REDIRECT_URL=/app
ACCOUNT_LOGOUT_REDIRECT_URL=/ # This path should be the same as LOGOUT_REDIRECT_URL
ACCOUNT_SIGNUP_REDIRECT_URL=/app # This path should be the same as LOGIN_REDIRECT_URL
ACCOUNT_EMAIL_SUBJECT_PREFIX="[MyProject] "
ACCOUNT_EMAIL_NOTIFICATIONS=True
ACCOUNT_UNIQUE_EMAIL=True
# ACCOUNT_AUTHENTICATED_REMEMBER is likely mapped to ACCOUNT_SESSION_REMEMBER.
# Ensure consistency if you have a variable named ACCOUNT_SESSION_REMEMBER in ConfigService.
# ACCOUNT_SESSION_REMEMBER=True
# Note: ACCOUNT_DEFAULT_HTTP_PROTOCOL and ACCOUNT_PASSWORD_MIN_LENGTH are often fixed in ConfigService, not env.
# If they are in ConfigService with default values, no need to list here unless overriding.

# --- dj-rest-auth settings ---
REST_AUTH_USE_JWT=True
# REST_AUTH_PASSWORD_RESET_USE_SITES_DOMAIN should be ACCOUNT_PASSWORD_RESET_USE_SITES_DOMAIN
REST_AUTH_PASSWORD_RESET_USE_SITES_DOMAIN=False
# REST_AUTH_PASSWORD_RESET_SERIALIZER is a string path, not typically from env.

# --- django-rest-framework-simplejwt Settings ---
SIMPLE_JWT_ROTATE_REFRESH_TOKENS=True
SIMPLE_JWT_BLACKLIST_AFTER_ROTATION=True
SIMPLE_JWT_UPDATE_LAST_LOGIN=False
SIMPLE_JWT_AUTH_HEADER_TYPES=["Bearer"] 
SIMPLE_JWT_AUTH_HEADER_NAME="HTTP_AUTHORIZATION"
SIMPLE_JWT_USER_ID_FIELD=id
SIMPLE_JWT_USER_ID_CLAIM=user_id
SIMPLE_JWT_TOKEN_TYPE_CLAIM=token_type
SIMPLE_JWT_JTI_CLAIM=jti

# --- Authentication Backends ---
# AUTHENTICATION_BACKENDS_LIST=["django.contrib.auth.backends.ModelBackend","allauth.account.auth_backends.AuthenticationBackend"]
# This is typically fixed in code, not loaded from env, unless you dynamically change backends.